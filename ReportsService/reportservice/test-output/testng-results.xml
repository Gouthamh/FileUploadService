<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="11" ignored="11" total="97" passed="72" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-12T15:20:40 IST" name="Suite" finished-at="2024-09-12T15:53:42 IST" duration-ms="1981146">
    <groups>
    </groups>
    <test started-at="2024-09-12T15:20:40 IST" name="Test" finished-at="2024-09-12T15:53:42 IST" duration-ms="1981146">
      <class name="reportservice.test1">
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:29:53 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:29:57 IST" duration-ms="3997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"CSV","parameters":{}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:29:57 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:30:03 IST" duration-ms="5838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"HTML","parameters":{}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:30:03 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:30:17 IST" duration-ms="14659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:30:17 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:30:33 IST" duration-ms="15630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"CSV","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:30:33 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:31:30 IST" duration-ms="57213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"HTML","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method retried="true" signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:31:30 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:32:28 IST" duration-ms="58330" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.test1.test001(test1.java:40)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method retried="true" signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:34:08 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:34:11 IST" duration-ms="2393" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <502>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <502>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.test1.test001(test1.java:40)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:35:51 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:35:57 IST" duration-ms="6399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:35:57 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:01 IST" duration-ms="3496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"CSV","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:01 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:05 IST" duration-ms="3837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:05 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:08 IST" duration-ms="3837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"HTML","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:08 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:13 IST" duration-ms="4380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"CSV","parameters":{"values":"dfd"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:13 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:17 IST" duration-ms="4051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test001(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:17 IST" name="test001" data-provider="s" finished-at="2024-09-12T15:36:21 IST" duration-ms="4465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"HTML","parameters":{"values":"dfd"}}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:21 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:36:33 IST" duration-ms="12013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"CSV","parameters":{},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:33 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:36:51 IST" duration-ms="17935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"HTML","parameters":{},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:36:51 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:37:04 IST" duration-ms="12640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:37:04 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:37:16 IST" duration-ms="11889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"CSV","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:37:16 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:37:28 IST" duration-ms="12453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"HTML","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:37:28 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:37:41 IST" duration-ms="12611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:37:41 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:37:52 IST" duration-ms="10636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"CSV","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:37:52 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:38:04 IST" duration-ms="12844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:38:04 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:38:16 IST" duration-ms="11565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"HTML","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:38:16 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:38:28 IST" duration-ms="11994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"CSV","parameters":{"values":"dfd"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:38:28 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:38:40 IST" duration-ms="12134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test002(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:38:40 IST" name="test002" data-provider="ziping" finished-at="2024-09-12T15:38:55 IST" duration-ms="15030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"HTML","parameters":{"values":"dfd"},"zip":true}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test002 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:38:55 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:39:15 IST" duration-ms="19397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method retried="true" signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:39:15 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:40:15 IST" duration-ms="60110" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <504>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <504>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.test1.test003(test1.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method retried="true" signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:41:55 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:42:45 IST" duration-ms="50092" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.test1.test003(test1.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method retried="true" signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:44:25 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:44:26 IST" duration-ms="1478" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <502>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <502>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.test1.test003(test1.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:06 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:12 IST" duration-ms="5679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:12 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:16 IST" duration-ms="3638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:16 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:20 IST" duration-ms="4412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:20 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:25 IST" duration-ms="5123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:25 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:31 IST" duration-ms="6234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:32 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:35 IST" duration-ms="3945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:35 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:40 IST" duration-ms="4404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:40 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:46 IST" duration-ms="5877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:46 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:52 IST" duration-ms="6376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:52 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:46:57 IST" duration-ms="4810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
        <test-method signature="test003(java.lang.String,java.lang.String)[pri:0, instance:reportservice.test1@13b13b5d]" started-at="2024-09-12T15:46:57 IST" name="test003" data-provider="password" finished-at="2024-09-12T15:47:01 IST" duration-ms="4401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
      </class> <!-- reportservice.test1 -->
      <class name="reportservice.Password">
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:21:37 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:21:42 IST" duration-ms="4826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:21:42 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:21:48 IST" duration-ms="5878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:21:48 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:21:53 IST" duration-ms="4444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:21:53 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:21:58 IST" duration-ms="4884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:21:58 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:22:07 IST" duration-ms="9340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:22:07 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:22:17 IST" duration-ms="10464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:22:17 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:22:28 IST" duration-ms="11108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:22:28 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:22:48 IST" duration-ms="20020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method retried="true" signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:22:48 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:23:49 IST" duration-ms="60103" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <504>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <504>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.Password.test004(Password.java:40)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method retried="true" signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:25:29 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:25:32 IST" duration-ms="3076" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <502>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <502>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.tecnotree.automatiom.Methods.Method.assertIt(Method.java:160)
at reportservice.Password.test004(Password.java:40)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:12 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:27:17 IST" duration-ms="5095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:17 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:27:22 IST" duration-ms="5512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:22 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:27:26 IST" duration-ms="3713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:26 IST" name="test004" data-provider="PasswordReport" finished-at="2024-09-12T15:27:30 IST" duration-ms="4207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":false,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:30 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:27:43 IST" duration-ms="12418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":true,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:43 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:27:55 IST" duration-ms="12580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:27:55 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:28:06 IST" duration-ms="10898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:28:06 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:28:18 IST" duration-ms="11654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":true,"userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:28:18 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:28:30 IST" duration-ms="12314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":true,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:28:30 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:28:43 IST" duration-ms="12737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:28:43 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:28:53 IST" duration-ms="10606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:28:53 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:29:05 IST" duration-ms="11393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":true,"ownerPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:29:05 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:29:17 IST" duration-ms="12292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo","attachmentType":"PDF","parameters":{},"zip":true,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:29:17 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:29:30 IST" duration-ms="12756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"zip":true,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:29:30 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:29:41 IST" duration-ms="10851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"zip":true,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.Password@40cb8df7]" started-at="2024-09-12T15:29:41 IST" name="test005" data-provider="PasswordReportZip" finished-at="2024-09-12T15:29:53 IST" duration-ms="12025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"zip":true,"ownerPassword":"9;`da3Lnb2=,","userPassword":"9;`da3Lnb2=,"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
      </class> <!-- reportservice.Password -->
      <class name="reportservice.FileName">
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:20:41 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:20:49 IST" duration-ms="8752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo_fileName","attachmentType":"PDF","parameters":{},"nameOfAfile":"updatedFileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo_fileName_updatedFileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:20:49 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:20:53 IST" duration-ms="3498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo_fileName","attachmentType":"HTML","parameters":{},"nameOfAfile":"updatedFileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo_fileName_updatedFileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:20:53 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:20:57 IST" duration-ms="4379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"DemoMongo_fileName","attachmentType":"CSV","parameters":{},"nameOfAfile":"updatedFileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoMongo_fileName_updatedFileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:20:57 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:03 IST" duration-ms="5425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"CSV","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"nameOfAfile":"fileNameUpdated"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template_fileNameUpdated]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:03 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:08 IST" duration-ms="5405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"HTML","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"nameOfAfile":"fileNameUpdated"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template_fileNameUpdated]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:08 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:14 IST" duration-ms="5618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"template","attachmentType":"PDF","parameters":{"restURL":"https://dap.pe-lab3.bdc-rancher.tecnotree.com/dap-reports/template-to-report","value":100,"testedqq":"restURL, value, testedqq are required parameters to generate repor"},"nameOfAfile":"fileNameUpdated"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[template_fileNameUpdated]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:14 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:17 IST" duration-ms="3559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate_fileName","attachmentType":"CSV","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"nameOfAfile":"sdsafd"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate_fileName_sdsafd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:17 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:21 IST" duration-ms="3830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate_fileName","attachmentType":"HTML","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"nameOfAfile":"sdsafd"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate_fileName_sdsafd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:21 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:25 IST" duration-ms="3857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"mongotemplate_fileName","attachmentType":"PDF","parameters":{"date":"08/08/2024","dateandtime":"08/08/2024 12:00:00 AM","interger":3456,"restURL":true},"nameOfAfile":"sdsafd"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mongotemplate_fileName_sdsafd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:25 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:29 IST" duration-ms="4365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"CSV","parameters":{"values":"dfd"},"nameOfAfile":"FileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues_FileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:29 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:34 IST" duration-ms="4279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"PDF","parameters":{"values":"dfd"},"nameOfAfile":"FileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues_FileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test004(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:34 IST" name="test004" data-provider="ReportsFilesName" finished-at="2024-09-12T15:21:37 IST" duration-ms="3957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"templateName":"onlyvalues","attachmentType":"HTML","parameters":{"values":"dfd"},"nameOfAfile":"FileName"}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onlyvalues_FileName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test004 -->
        <test-method signature="test005(java.lang.String,java.lang.String)[pri:0, instance:reportservice.FileName@37858383]" started-at="2024-09-12T15:21:37 IST" name="test005" finished-at="2024-09-12T15:21:37 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public static void reportservice.FileName.test005(java.lang.String,java.lang.String) requires a @DataProvider named : password]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public static void reportservice.FileName.test005(java.lang.String,java.lang.String) requires a @DataProvider named : password
at org.testng.internal.Parameters.findDataProvider(Parameters.java:526)
at org.testng.internal.Parameters.handleParameters(Parameters.java:763)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test005 -->
      </class> <!-- reportservice.FileName -->
      <class name="reportservice.Test001">
        <test-method retried="true" signature="Test1()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:47:01 IST" name="Test1" finished-at="2024-09-12T15:47:01 IST" duration-ms="21" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test1(Test001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method retried="true" signature="Test1()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:48:42 IST" name="Test1" finished-at="2024-09-12T15:48:42 IST" duration-ms="2" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test1(Test001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method retried="true" signature="Test1()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:50:22 IST" name="Test1" finished-at="2024-09-12T15:50:22 IST" duration-ms="3" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test1(Test001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method retried="true" signature="Test1()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:52:02 IST" name="Test1" finished-at="2024-09-12T15:52:02 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test1(Test001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test1()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:53:42 IST" name="Test1" finished-at="2024-09-12T15:53:42 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test1(Test001.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:reportservice.Test001@2892dae4]" started-at="2024-09-12T15:53:42 IST" name="Test2" finished-at="2024-09-12T15:53:42 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at reportservice.Test001.Test2(Test001.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
      </class> <!-- reportservice.Test001 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
